name: Update License Year

on:
  schedule:
    - cron: '0 0 1 1 *' # Runs at 00:00 UTC on Jan 1 every year
  workflow_dispatch: # Allow manual trigger as well

permissions:
  contents: write

jobs:
  update-license:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current year
        id: year
        run: echo "year=$(date +'%Y')" >> "$GITHUB_OUTPUT"

      - name: Prepare git config
        run: git config user.email "nightmaregaurav@users.noreply.github.com" && git config user.name "Gaurav Nyaupane"
        
      - name: Backup LICENSE file to compare it later
        run: cp LICENSE LICENSE.bak

      - name: Update year in LICENSE
        run: |
          CURRENT_YEAR="${{ steps.year.outputs.year }}"

          awk -v year="$CURRENT_YEAR" '
            BEGIN { IGNORECASE = 1 }

            function update_year(line, pattern) {
              if (match(line, pattern, m)) {
                prefix = m[1]
                old = substr(line, RSTART + length(prefix), RLENGTH - length(prefix))
                if (match(old, /^[0-9]{4}$/)) {
                  return substr(line, 1, RSTART - 1) prefix old "–" year substr(line, RSTART + RLENGTH)
                } else if (match(old, /^[0-9]{4}–[0-9]{4}$/)) {
                  split(old, years, "–")
                  return substr(line, 1, RSTART - 1) prefix years[1] "–" year substr(line, RSTART + RLENGTH)
                }
              }
              return line
            }

            {
              line = $0
              patterns[0] = "(copyright \\(c\\)[[:space:]]*)[0-9]{4}(–[0-9]{4})?"
              patterns[1] = "(copyright[[:space:]]+)[0-9]{4}(–[0-9]{4})?"
              patterns[2] = "(©[[:space:]]*)[0-9]{4}(–[0-9]{4})?"
              patterns[3] = "(copr\\.[[:space:]]*)[0-9]{4}(–[0-9]{4})?"

              for (i in patterns) {
                line = update_year(line, patterns[i])
              }

              print line
            }
          ' LICENSE.bak > LICENSE

      - name: Check if LICENSE changed
        id: diff
        run: |
          if diff -q LICENSE LICENSE.bak > /dev/null; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit updated LICENSE
        if: steps.diff.outputs.changed == 'true'
        run: |
          git add LICENSE
          git commit -m "chore: update LICENSE year to ${{ steps.year.outputs.year }}"
          git push
